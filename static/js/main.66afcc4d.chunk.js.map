{"version":3,"sources":["App.js","index.js"],"names":["App","api","useState","weather","setWeather","city","setCity","err","setErr","className","type","onChange","event","target","value","onClick","fetch","then","response","json","error","console","log","current","temp_c","location","name","country","localtime","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMA6DeA,MAzDf,WAEE,IAAMC,EACA,kCADAA,EAEA,4CAGN,EAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAqBJ,mBAAS,MAA9B,mBAAOK,EAAP,KAAWC,EAAX,KA+BA,OACE,gCACE,uBAAOC,UAAU,SAASC,KAAK,OAAOC,SAdrB,SAACC,GACpBN,EAAQM,EAAMC,OAAOC,UAcjB,qBAAKL,UAAU,SAAf,SACE,wBAAQA,UAAU,YAAYM,QAjCtB,WACdP,EAAO,MAEPQ,MADUf,EAAQ,QAAQA,EAAQ,MAAMI,GAErCY,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACkB,MAAlBA,EAASE,OACXZ,EAAO,GACPa,QAAQC,IAAI,UAGZlB,EAAWc,GAEbG,QAAQC,IAAIJ,OAoBV,sBAGJ,sBAAKT,UAAU,UAAf,UACI,oBAAIA,UAAU,OAAd,SAAmC,OAAZN,GAA4B,IAARI,EAAa,KAAOJ,EAAQoB,QAAQC,OAAS,UACxF,qBAAIf,UAAU,WAAd,UAAuC,OAAZN,GAA4B,IAARI,EAAa,KAAOJ,EAAQsB,SAASC,KAAO,KAAOvB,EAAQsB,SAASE,QAAnH,OACA,qBAAIlB,UAAU,YAAd,UAAwC,OAAZN,GAA4B,IAARI,EAAa,KAAO,eAAiBJ,EAAQsB,SAASG,UAAtG,cChDVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.66afcc4d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Map } from 'pigeon-maps';\n\n\nfunction App() {\n\n  const api = {\n    key:\"ff1136e05adb4b15a24152225210212\",\n    url:\"http://api.weatherapi.com/v1/current.json\"\n  };\n  \n  const [weather, setWeather] = useState(null)\n  const [city, setCity] = useState(\"\")\n  const [err,setErr] = useState(null)\n  \n  const getData = () => {\n    setErr(null)\n    const url=api.url+\"?key=\"+api.key+\"&q=\"+city\n    fetch(url)\n      .then(response => response.json())\n      .then(response => {\n        if (response.error != null) {\n          setErr(1)\n          console.log(\"ERROR\")\n        }\n        else {\n          setWeather(response)\n        }\n        console.log(response);\n      })\n  }\n\n  const handleChange = (event) => {\n    setCity(event.target.value)\n  }\n\n  const map = () => {\n    return (\n      <Map height={300} defaultCenter={60,4} defaultZoom={11}></Map>\n    )\n  }\n\n\n\n  return (\n    <div>\n      <input className=\"inText\" type=\"text\" onChange={handleChange} />\n        <div className=\"btnDiv\">\n          <button className=\"searchBtn\" onClick={getData}>SEARCH</button>\n        </div>\n\n      <div className=\"results\">\n          <h2 className=\"temp\">{(weather === null || err === 1) ? null : weather.current.temp_c + \"Â°C\"}</h2>\n          <h2 className=\"location\">{(weather === null || err === 1) ? null : weather.location.name + \", \" + weather.location.country} </h2>\n          <h2 className=\"localTime\">{(weather === null || err === 1) ? null : \"Local time: \" + weather.location.localtime} </h2>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}